# This workflow will build, test, and deploy to GitHub Packages.
name: Maven Package

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Publish to GitHub Packages Apache Maven
      run: mvn -B deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_PACKAGES_REPO_URL: https://maven.pkg.github.com/${{ github.repository }}
        
  signal-vdm-vscode:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: ${{ github.ref_name }} == 'main' && ${{ github.repository }} == "glennlaursen/vdm-plantuml-plugin"
    
    steps:
      - name: Checking out
        uses: actions/checkout@v3
        
      - name: Getting POM artifact info
        id: get_artifact_info
        run: |
          echo "version=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
        
      - name: Send repository dispatch http request to VDM-VSCode
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.VDM_VSCODE_PAT }}
          repository: glennlaursen/vdm-vscode
          event-type: new-jar
          client-payload: '{ "configId": "vdm-plantuml-plugin", "version": "${{ steps.get_artifact_info.outputs.version }}" }'
